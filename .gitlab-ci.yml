# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
# variables:
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - venv/

# before_script:
#   - python --version ; pip --version  # For debugging
#   - pip install virtualenv
#   - virtualenv venv
#   - source venv/bin/activate

stages:
  - test
  - build

sonarqube-check:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main

image-build:
   stage: build
   image: quay.io/podman/stable:latest
   script:
     - podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
     - podman --storage-opt mount_program=/usr/bin/fuse-overlayfs --storage-opt ignore_chown_errors=true build -t $IMAGE_TAG .
     - podman push $IMAGE_TAG
   only:
     - main
# deploy:
#   stage: deploy
#   script: 
#     - pip install -r requirements.txt
#     - mkdir logs
#     - touch logs/.log
#     - python app.py
#   environment: production
